###########################################################################
#
# Log4J configuration properties example
#   Priorities: DEBUG < INFO < WARN < ERROR < FATAL.
#
# Log4J will attempt to locate default properties by loading:
#
# 1. "log4j.properties" in the root dir somewhere in your CLASSPATH.
# 2. The URL from the system property log4j.configuration.
#
###########################################################################

###########################################################################
# What to log
###########################################################################

#log4j.rootLogger=DEBUG, C, R
#log4j.rootLogger=WARN, R
log4j.rootLogger=INFO, C

log4j.logger = INFO
log4j.additivity = false
log4j.logger.jumpstart=DEBUG
log4j.logger.org.hibernate=WARN
log4j.logger.org.hibernate.SQL=WARN, C
log4j.additivity.org.hibernate.SQL=false
log4j.logger.org.openejb=DEBUG
log4j.logger.org.mortbay.log=INFO
log4j.logger.org.slf4j=INFO
log4j.logger.tapestry=INFO
log4j.logger.org.apache.tapestry=INFO
log4j.logger.org.apache.tapestry5=INFO

###########################################################################
# How to log
#
# Conversion pattern elements (see http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html)
#	%c	Category. %c{2} prints the right most 2 components of the category.
#	%C	Fully qualified class name. %C{1} prints the class name only.
#	%d	Date in ISO format. Also %d{ABSOLUTE}, %d{DATE}, %d{ISO8601}, %d{HH:mm:ss,SSS}, %d{dd?MMM?yyyy?HH:mm:ss,SSS}, etc.
#	%F	File name. EXTREMELY SLOW.
#	%l	Output location. EXTREMELY SLOW.
#	%L	Line number. EXTREMELY SLOW.
#	%m	Application supplied message.
#	%M	Method name. EXTREMELY SLOW.
#	%n	New line.
#	%p	Priority.
#	%r	Number of milliseconds elapsed since the application started.
#	%t	Thread name.
#	%x	NDC (nested diagnostic context) associated with the thread.
#	%%	% sign.
###########################################################################

# C: an appender that outputs to console

log4j.appender.C=org.apache.log4j.ConsoleAppender
log4j.appender.C.layout=org.apache.log4j.PatternLayout
#log4j.appender.C.layout.ConversionPattern=%-6r %-5p %m%n
log4j.appender.C.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
#log4j.appender.C.layout.ConversionPattern=%-6r %-5p %m%n

# F: an appender that outputs to a file

log4j.appender.F=org.apache.log4j.FileAppender
log4j.appender.F.File=logs/jumpstart.log
log4j.appender.F.layout=org.apache.log4j.PatternLayout
#log4j.appender.F.layout.ConversionPattern=%d [%t] %-5p %c %m%n
log4j.appender.F.layout.ConversionPattern=ear %5p [%t] (%F:%L) - %m%n

# R: an appender that outputs to a rolling log file "jumpstart.log"

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=logs/jumpstart.log
log4j.appender.R.MaxFileSize=1000KB
log4j.appender.R.MaxBackupIndex=4
log4j.appender.R.layout=org.apache.log4j.PatternLayout
# Production version
#log4j.appender.R.layout.ConversionPattern=%d %p %c - <%m>%n
# Slow, caller context, debug version
#log4j.appender.R.layout.ConversionPattern=%d %5p %c - <%m> (%F.%M:%L) %t%n
# One like we often use for the console
log4j.appender.R.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n
