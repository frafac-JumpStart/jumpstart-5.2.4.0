<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- We've declared a doctype to allow us to use special characters like &gt; -->

<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd">
<body>
	<h1>Previewable Templates</h1> 
	
	A great feature of Tapestry template files is that they can be opened in a web browser or WYSIWYG editor 
	for "preview". This is great for the web page designer.	
	However, your <em>template coding style</em> will affect <em>how well</em> they "preview".<br/><br/>
	
	Tapestry allows 2 different coding styles.  Here is an example of a PageLink done in both styles:<br/>
	<ol>
		<li><code>&lt;t:pagelink page="Index"&gt;Home&lt;/t:pagelink&gt;</code></li>
		<li><code>&lt;a t:type="pagelink" t:page="Index" href="#"&gt;Home&lt;/a&gt;</code></li>
	</ol>
	
	The first style uses the component type, <code>t:pagelink</code>, as the element type. The code is short 
	and easy to read, but it will not preview well. That's because <code>t:pagelink</code> 
	is not an ordinary HTML element, so the browser will not know what to do with it.<br/><br/>
	
	The second style is called <strong>invisible instrumentation</strong>.  It lets us "hide" the component 
	in an ordinary HTML element, <code>a</code> (an anchor element). 
	During preview a web browser will display <em>Home</em> as a hyperlink, which is exactly what we want. 
	At runtime Tapestry will detect our component (it looks for <code>t:type</code> and/or <code>t:id</code>) 
	and replace the whole element. <br/><br/>
	
	Incidentally, the reason we added <code>href="#"</code> is because it's a required parameter of the 
	anchor element, and because <code>href=""</code> is not enough to make all browsers show a hyperlink.<br/><br/>

	<strong>To see the difference</strong> that invisible instrumentation makes, first copy and paste the 
	PreviewableTemplates.tml source (see below) into a file or else just find it in the project at:
	<ul>
		<li>web/src/main/java/jumpstart/web/pages/examples/lang/PreviewableTemplates.tml</li>
	</ul>

	Now open the file with a web browser and look at the result of the code we saw above:
	<ol>
		<li><t:pagelink page="Index">Home</t:pagelink></li>
		<li><a t:type="pagelink" t:page="Index" href="#">Home</a></li>
	</ol>
	
	<strong>Which is best?</strong>  The choice is yours.  Invisible instrumentation cannot make every component 
	preview-able, but at times it may make code more readable and it may also enable better sharing of templates 
	between developers and web designers.<br/><br/>

	In JumpStart we use invisible instrumentation wherever we think it improves preview-ability.<br/><br/>
	
	References: 
	<a href="http://tapestry.apache.org/tapestry5/guide/templates.html">Component Templates</a>.
	<br/><br/>
	
	<t:sourcecodedisplay src="/web/src/main/java/jumpstart/web/pages/examples/lang/PreviewableTemplates.tml"/>
	<t:sourcecodedisplay src="/web/src/main/java/jumpstart/web/pages/examples/lang/PreviewableTemplates.java"/>
</body>
</html>
